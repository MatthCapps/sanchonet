"use strict";(self.webpackChunksanchonet=self.webpackChunksanchonet||[]).push([[589],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,f=u["".concat(s,".").concat(d)]||u[d]||k[d]||o;return n?a.createElement(f,i(i({ref:t},p),{},{components:n})):a.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5592:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>k,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_label:"Register a stake pool",title:"Register a stake pool in SanchoNet",sidebar_position:4,slug:"/tutorials/stake-pool-registration"},i=void 0,l={unversionedId:"tutorials/register-spo",id:"tutorials/register-spo",title:"Register a stake pool in SanchoNet",description:"WARNING: This tutorial is simplified and deliberately excludes secure key handling and relay architecture, which are essential for other testnets and mainnet. For a comprehensive tutorial, see the Cardano course where you can access video lessons and a more detailed instruction handbook.",source:"@site/docs/tutorials/register-spo.mdx",sourceDirName:"tutorials",slug:"/tutorials/stake-pool-registration",permalink:"/tutorials/stake-pool-registration",draft:!1,editUrl:"https://github.com/input-output-hk/sanchonet/tree/master/docs/tutorials/register-spo.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"Register a stake pool",title:"Register a stake pool in SanchoNet",sidebar_position:4,slug:"/tutorials/stake-pool-registration"},sidebar:"docsSidebar",previous:{title:"Faucet",permalink:"/tutorials/faucet"},next:{title:"Create actions",permalink:"/tutorials/create-action"}},s={},c=[],p={toc:c},u="wrapper";function k(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"WARNING"),": This tutorial is simplified and deliberately excludes secure key handling and relay architecture, which are essential for other testnets and mainnet. For a comprehensive tutorial, see the ",(0,r.kt)("a",{parentName:"p",href:"https://cardano-course.gitbook.io/cardano-course/"},"Cardano course")," where you can access video lessons and a more detailed instruction handbook."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Prerequisites")),(0,r.kt)("p",null,"Before you start, ensure that you have:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"A running node: ",(0,r.kt)("a",{parentName:"li",href:"/tutorials/start-node"},"see the tutorial")),(0,r.kt)("li",{parentName:"ol"},"Created keys and addresses: ",(0,r.kt)("a",{parentName:"li",href:"/tutorials/address"},"see the tutorial")),(0,r.kt)("li",{parentName:"ol"},"Requested funds from the faucet: ",(0,r.kt)("a",{parentName:"li",href:"/tutorials/faucet"},"see the tutorial"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Register your stake pool:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install ",(0,r.kt)("a",{parentName:"li",href:"https://jqlang.github.io/jq"},"jq"),", a tool that will assist in parsing the UTXOs for transactions:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo apt-get install jq -y\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Set the ",(0,r.kt)("inlineCode",{parentName:"li"},"CARDANO_NODE_SOCKET_PATH")," variable to the path of ",(0,r.kt)("inlineCode",{parentName:"li"},"node.socket")," that you identified when starting the node:  ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"export CARDANO_NODE_SOCKET_PATH=~/node.socket\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Register the stake address you previously created by generating a registration certificate:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cardano-cli stake-address registration-certificate \\\n--conway-era \\\n--stake-verification-key-file stake.vkey \\\n--out-file registration.cert\n")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Create a transaction to submit the stake key registration certificate to the chain. Creating a transaction using the CLI always involves a three-step process: BUILDING, SIGNING, AND SUBMITTING the transaction.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Build")," the transaction:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cardano-cli transaction build \\\n--conway-era \\\n--testnet-magic 4 \\\n--witness-override 2 \\\n--tx-in $(cardano-cli query utxo --address $(cat payment.addr) --testnet-magic 4 --out-file  /dev/stdout | jq -r 'keys[0]') \\\n--change-address $(cat payment.addr) \\\n--certificate-file registration.cert \\\n--out-file tx.raw\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Sign")," the transaction:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cardano-cli transaction sign \\\n--tx-body-file tx.raw \\\n--signing-key-file payment.skey \\\n--signing-key-file stake.skey \\\n--testnet-magic 4 \\\n--out-file tx.signed\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Submit")," the transaction:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cardano-cli transaction submit \\\n--testnet-magic 4 \\\n--tx-file tx.signed \n")),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"Generate cold keys and the operational certificate for your pool:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cardano-cli node key-gen \\\n--cold-verification-key-file cold.vkey \\\n--cold-signing-key-file cold.skey \\\n--operational-certificate-issue-counter-file opcert.counter\n")),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},"Generate the key-evolving-signature (KES) keys:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cardano-cli node key-gen-KES \\\n--verification-key-file kes.vkey \\\n--signing-key-file kes.skey\n")),(0,r.kt)("ol",{start:7},(0,r.kt)("li",{parentName:"ol"},"Generate VRF keys:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cardano-cli node key-gen-VRF \\\n--verification-key-file vrf.vkey \\\n--signing-key-file vrf.skey\n")),(0,r.kt)("ol",{start:8},(0,r.kt)("li",{parentName:"ol"},"Create your stake pool registration certificate:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cardano-cli stake-pool registration-certificate \\\n--conway-era \\\n--cold-verification-key-file cold.vkey \\\n--vrf-verification-key-file vrf.vkey \\\n--pool-pledge 9000000000 \\\n--pool-cost 340000000 \\\n--pool-margin .05 \\\n--pool-reward-account-verification-key-file stake.vkey \\\n--pool-owner-stake-verification-key-file stake.vkey \\\n--testnet-magic 4 \\\n--pool-relay-ipv4 <RELAY NODE PUBLIC IP> \\\n--pool-relay-port <RELAY NODE PORT> \\\n--out-file pool-registration.cert\n")),(0,r.kt)("ol",{start:9},(0,r.kt)("li",{parentName:"ol"},"Create a stake delegation certificate:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cardano-cli stake-address delegation-certificate \\\n--conway-era \\\n--stake-verification-key-file stake.vkey \\\n--cold-verification-key-file cold.vkey \\\n--out-file delegation.cert\n")),(0,r.kt)("ol",{start:10},(0,r.kt)("li",{parentName:"ol"},"Submit pool registration and stake delegation certificates:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Build:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cardano-cli transaction build \\\n--conway-era \\\n--testnet-magic 4 \\\n--witness-override 3 \\\n--tx-in $(cardano-cli query utxo --address $(cat payment.addr) --testnet-magic 4 --out-file  /dev/stdout | jq -r 'keys[0]') \\\n--change-address $(cat payment.addr) \\\n--certificate-file pool-registration.cert \\\n--certificate-file delegation.cert \\\n--out-file tx.raw\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Sign:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cardano-cli transaction sign \\\n--tx-body-file tx.raw \\\n--signing-key-file payment.skey \\\n--signing-key-file cold.skey \\\n--signing-key-file stake.skey \\\n--testnet-magic 4 \\\n--out-file tx.signed\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Submit:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cardano-cli transaction submit \\\n--testnet-magic 4 \\\n--tx-file tx.signed \n")),(0,r.kt)("ol",{start:11},(0,r.kt)("li",{parentName:"ol"},"Get your pool ID, you will need to get a delegation from the faucet:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cardano-cli stake-pool id \\\n--cold-verification-key-file cold.vkey \\\n--output-format bech32\n--out-file pool.id\n")),(0,r.kt)("ol",{start:12},(0,r.kt)("li",{parentName:"ol"},"Restart your node using your pool credentials:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cardano-node run --topology topology.json \\\n--database-path db \\\n--socket-path node.socket \\\n--shelley-kes-key kes.skey \\\n--shelley-vrf-key vrf.skey \\\n--shelley-operational-certificate opcert.cert \\\n--port 3001 \\\n--config config.json\n")))}k.isMDXComponent=!0}}]);